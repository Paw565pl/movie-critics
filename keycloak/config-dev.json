{
  "id": "cc088114-2ba1-4474-a985-117cfd80a285",
  "realm": "movie-critics",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 31556926,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": true,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "43fc7a23-fa73-4960-aed5-ac6e0d482b42",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "cc088114-2ba1-4474-a985-117cfd80a285",
        "attributes": {}
      },
      {
        "id": "539d8bc8-0e86-4a10-889f-73b543ec9997",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "cc088114-2ba1-4474-a985-117cfd80a285",
        "attributes": {}
      },
      {
        "id": "eb1d7fe7-0080-446a-bb54-52402ad37491",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "cc088114-2ba1-4474-a985-117cfd80a285",
        "attributes": {}
      },
      {
        "id": "cf26b123-ca2a-4600-844d-5b5aa803f98f",
        "name": "default-roles-movie-critics",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "realm-management": ["manage-users"],
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "cc088114-2ba1-4474-a985-117cfd80a285",
        "attributes": {}
      }
    ],
    "client": {
      "angular-frontend": [],
      "realm-management": [
        {
          "id": "96f58426-32ca-4ecd-9f16-7d274c94cceb",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "13e86cd5-6de3-481d-a3ce-20f3dd243069",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "96f08f9d-73ca-407f-990f-b5e350352854",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "3d9696e8-feae-4f0c-9597-50942e187f05",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-authorization",
                "impersonation",
                "view-users",
                "manage-realm",
                "create-client",
                "view-clients",
                "view-events",
                "query-clients",
                "query-groups",
                "query-users",
                "manage-identity-providers",
                "query-realms",
                "manage-users",
                "manage-clients",
                "view-identity-providers",
                "view-authorization",
                "manage-events",
                "view-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "0e61497b-1dc4-47c6-a037-dd6212a49417",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "c9e7ae5b-ddf3-439b-b9f7-592b5aa60b7b",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "f8a61fc9-01b5-4772-8537-230d33225325",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "2ee5c11b-7aeb-4bbe-a1f8-34d120357444",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "a8b250c7-b091-43ac-a963-307b4021c54e",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "41622dff-5677-4632-96f3-ff6b1430141f",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "bccc1c76-a552-4a4e-a27c-77d0665902d7",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "f3b0182e-7ca2-4062-85ab-c8b9b563e38d",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "43746c7e-17a8-46af-a8d5-f6e3933a1786",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "37392871-a65f-4298-8271-1d44d83cb164",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "3d9acc3c-5390-40db-bc1d-2a67e1d7c817",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "c64687e4-3b62-4bff-a7b2-6ce419633b64",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "8280c8eb-b968-4bba-9485-50ca627770a9",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "0ef2708b-a5da-4a37-b73b-ab38d06ac2f0",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        },
        {
          "id": "99eff66e-012e-4402-96d7-ec3a97e8c317",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "26f02803-ee7b-4a89-b9d1-f72f8a7aacbe",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "c344114b-0cd5-4b66-a5ef-33fbef0141fa",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "d7ae2b40-9dfc-45aa-9e64-c5f35c09ee14",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "38dbfdff-7ac2-416f-935d-5d7af35f61bd",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "5f6444af-b445-442d-bca7-fa1fbddc186c",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "d3373c77-2c5c-441a-91c1-1400bfd554eb",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "1406d7f2-ac84-4dd7-a613-a70d86c47c57",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "1daa136f-b28c-4f48-805b-c93fe52d4cb0",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "dd0e5c7f-6296-4f41-bdcb-2566dc324a27",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        },
        {
          "id": "420b6838-f159-4947-a956-91a383c4a6a8",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
          "attributes": {}
        }
      ],
      "spring-boot-api": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "cf26b123-ca2a-4600-844d-5b5aa803f98f",
    "name": "default-roles-movie-critics",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "cc088114-2ba1-4474-a985-117cfd80a285"
  },
  "requiredCredentials": ["password"],
  "passwordPolicy": "length(8) and notUsername(undefined) and notEmail(undefined) and notContainsUsername(undefined) and upperCase(1) and lowerCase(1) and digits(1)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "e1691c98-c6e9-47a3-be86-009a5490bbb3",
      "username": "admin",
      "email": "admin@admin.com",
      "emailVerified": false,
      "createdTimestamp": 1732787154753,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "374fdfbf-7c09-49ca-af1a-aeae003ef5d7",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1732788137338,
          "secretData": "{\"value\":\"HD91qCfY6U4n+DSA1ZsQdK4kH+YOHwOG4ZsZ80o+9FQ=\",\"salt\":\"+G506Dgh11S86lORdf859g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["admin", "default-roles-movie-critics"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1e81b4ec-5806-453f-b1e4-ee6e0a15dec1",
      "username": "test",
      "email": "test@test.com",
      "emailVerified": false,
      "createdTimestamp": 1732787077559,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "4fb730cf-31ea-49d7-ae06-a8a7babb6340",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1732787120325,
          "secretData": "{\"value\":\"Zjx9FUuRux4A8vKHgApSZVnWEgn7cscD6Y/xa0NYm5A=\",\"salt\":\"p0sJkMNKfltPF8aWJPwWmg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-movie-critics"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "5c502c83-e3f5-4ba7-b52e-7ec8eaa2b05d",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/movie-critics/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/movie-critics/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b3ceec90-2177-4fff-90c7-cc58216ece70",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/movie-critics/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/movie-critics/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "64ef09cb-4303-4d0c-b678-bd435dc1f3d4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7d41c02a-1f2e-4486-879e-4ee41cbd361f",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e9ef80ed-75e9-4888-b360-a851df7ed262",
      "clientId": "angular-frontend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:4200",
      "adminUrl": "http://localhost:4200",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:4200/*"],
      "webOrigins": ["http://localhost:4200"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c344114b-0cd5-4b66-a5ef-33fbef0141fa",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f57a5b35-eb61-4dcc-b09e-fb84415a1d9f",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d26b4b7f-54c3-452d-9a12-1575293c45c8",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/movie-critics/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/movie-critics/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "faa6859a-c5e3-44ae-a005-20043122bf72",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1c6cb9d7-d217-48b8-be92-33cddfdd786c",
      "clientId": "spring-boot-api",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "http://localhost:8080",
      "baseUrl": "http://localhost:8080",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "MKHz0Kw82cGhDIwmz3vZ8fO6AmY87eQn",
      "redirectUris": ["http://localhost:8080/*"],
      "webOrigins": ["http://localhost:8080"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1732787361",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "c069cd05-7170-4709-8dd7-dd7ba645e018",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "feee9ab3-567f-4ab3-a698-342dcf4038b3",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "4cf99f15-095a-410e-8717-dc13c8580ba6",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e96a0479-c075-4857-8011-12275a64874a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "99dae74e-6b22-449d-9f05-cb6aa55c3e81",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "7c8cb47b-7a3b-4ee3-a661-3b7e00195646",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c1813cea-5518-457d-b6cd-d9d8bfadc359",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "880de0ed-8247-433d-8970-a6e728e5d288",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "184d200e-eee7-425a-8c70-80bad4a3064c",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6d4c62ad-0fd1-4f3c-9e88-2b38e30f5fc0",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "c82a07fc-2f68-4309-a852-580e13ef2cf6",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3f9117d2-78ef-4936-8c20-3ac48b3fa259",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f9b72bc3-3548-4b1d-bb2b-4017ec9b20c3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c43a7fdd-8299-41fc-924e-1f4daac83f12",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3f4ee7b3-e3ea-44c3-9664-6821a609713d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "63e2d9ce-c9d8-45ac-9059-2cd47635ffad",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "bbe67185-8c4c-48b7-a92c-a1ea074a1c47",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de1337c9-0f8c-4b38-8ade-2a124a4e08fe",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4b14bd2c-02ce-4880-8a8e-e2a81374b990",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6492eb96-68c5-4de0-8a95-dfbf300abaa0",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6dd89839-1d6e-4efd-899b-d4978206105c",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "eaa46b1d-bcb1-4244-8917-6d6fc68bab59",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3d92a11c-1490-4aaa-a9eb-9a46a17f8abb",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f2c05f20-20a7-40bf-a9d0-a49d5adc81dd",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "2cbd4dce-03db-4f06-96d3-5cfea75a1fbe",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b860ceca-46f4-46f4-919e-c461980f76e8",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "18401789-faf3-4466-8543-0cdc3b5a0ae9",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fe30cb5b-d98e-47d2-b68d-db0fcb800dd7",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "48bf9397-5883-4d14-9efb-97e4b88880f4",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7511efed-e709-47c6-abe0-12dd54dc6eb9",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "45d61edf-4cd6-4c3d-b7c0-bbb3f749acd6",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "d5154204-1591-499a-8844-882c70bcd4b1",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "fb0dfb00-0754-42a6-837c-ec0d0e902bde",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "aaa8b0f3-b0f8-458f-b540-de709c70ead3",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "a9227478-5949-4832-9973-78df0d3ef143",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b64ba82a-812a-4e0d-86d1-5b8389b65222",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "ffcc22c4-727f-4da8-be1f-f64fb52225d9",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "f2a473cd-dac0-438b-ac99-7679fd5d6889",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "60bc46aa-f1e7-47fb-a3d4-0b3f4a301259",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "329a8e29-ca54-4716-891e-eacfa70b8c77",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "2a1f3832-8b2e-442d-a9ac-d130951f64d6",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "dc7cb0d9-1d91-44f3-bd5d-154f1703c088",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4a39700e-469f-4b93-a110-43c730d80bcd",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "733f1ca5-18d2-4916-a209-3234deb9e50b",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "f5087d30-e138-40e3-a60b-748b1a6b86bb",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "6c1c3a2a-5bdb-4906-8ccb-c535c773be20",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "23a58fd7-9eb7-4c6d-a2f1-23e2039c9e81",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "d5640838-1b6a-4ad9-9608-0327d8c330d8",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "e8072bd6-0fa5-4621-9bbb-7b2050d8c4d5",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "cc9de12a-53de-4bcc-ba04-aeca4926596d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "b09d102b-94ef-4481-b9bf-5db95506c34c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "5aa84b47-794d-41f6-addb-770865031393",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "63f29a77-1d65-479e-bde2-4eaf32992783",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"annotations\":{},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "23ed9c09-fade-4dff-8d33-6fa1c49b2bb6",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAncfc8d0Ch73bYZLutmAiRNxZi7Y8PHuiAXIK6AFe3LnnZM+OioA7yb9cGhBXeKTYbFCUU/MXNtYPYkkB2bunGweNNhyqnHCqMdjsFqUyudtwP/QqImMxEDGD7ivOHKI5ZQ/L+rQ/4ERgUfl4HvQdbMEvOOpAJU6xLl1jJ7Fwp7ENrBz59Us63/t5PmWCgfWaNIMuz1Bgs0R/7bbSXHUd6oEDf61sQp2bgw56MRJjspbZSCK34CqWrzICLGxusufIr51hI33v4LflOQbecqeGNEJZhUsngTyFnK5MFgFo07GtRi8fyArXWj1XPocWBZ/cjeqKJZC25174/JIzca7rEwIDAQABAoIBAA4I6GwE2/2PGdcE5uighh8LkSH1KxTsoNO+fThEYIsDZ/d24jFxVRNasXdwDksHZTXDuGEvTz7r4G2k6N4HuMZivMdPc+DhwYHlnDqRDBrhAvJTzPVG6LP0DTQ//6zBKv6eXrQ4ssxHYmBoVhMKy+mpbxxOjTfEV2ZnnP/u4xwUM9CpaGRsnfrdpsq71dSpefDUb00ICcz7/xuewGmHSBa79SxgMDsFjQAWd+bWZynLLTcy4cbwM84CYzeJCLI0OzBtHashN6iLTfshtnfdmQZ2QzA6NZk6h5TDKRWLUpg6w8L0VU3IYjGLculmdMcHGoUWVv1fhMbNU1DHRAVqzWECgYEA3r2FFrmCAl+9yGtQ/yZ2FlfkOpn4NIAugSJWNM58hlWYCB8M4ZvdWLFiLob+d8LB0RHZgf5NbPgHCRdQ5VTIySv8+3thW6ozjL8Svtz4eD5GPbdAca+6e7F8h4NKGYBBlaCIPH5lR+hIcme3bFvA7Db0cAp9f8JAjVkYOEeqXW8CgYEAtVcx7RhdXkEgbIxH9JAepl1XmNaf/ybaBcRo+afpRjMsZwocGyUcBbl0t/x/3JxvBRYjA+qPTCb2yN5TxXCqKUqPcTQ6Y1+qdRJLmYaKF7mFORCowUK6z2Ln8lpiE2l5wPk5engWDQ8zjDOIQEaGhCmsvrUVuIBDChe3mdszQp0CgYEAmrnB+rAwjJ+fQNqzcBpyi0DQrJiKH0Yvh8qnYZVSUSqiKnoPQ6U3FEZcMn/Zwq2KX0Xr9u4FML32fS0yJ6xGseAZo0PotHk9x/Zu+iCbhUOVHYfvf0mX3BbFr4jW73H1nQ/fs04F4vaLZNWBSAdQs4XVNQNEfHwexVFvjqDRyocCgYBMlQdbpsd/j6d+z/tvWBHplk/xFuq42ZKHjvv6OyQz5lahKU7XU+OyszCMptDkvRfRoRimhb+AnI/qIqJkJoFmMLvFRhZGc1dMW66bporZHBscD2IFRAYaoR1tZyg2JHwrt9TDWMWPPFU7p2OqKV6Tn/n5DAahRWGKeJusGTtbrQKBgAqGSwvTqFjVYwPy1jVQ2n690ihtRq2cAR1b4Zepf7nu62nJdYDaOfWcbOFz3qBQJ6Ty3BmDn3hztzgNBq6BbBafBL3tWqhKkDfHmk21ZSCOJe7L39N89p8bMeMVC5qIzjsbcsUHWHpI5zxpYQhl88cwIAkqmbxiam/qNzj8yRx7"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICqTCCAZECBgGTciDnbzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1tb3ZpZS1jcml0aWNzMB4XDTI0MTEyODA5MzQzOVoXDTM0MTEyODA5MzYxOVowGDEWMBQGA1UEAwwNbW92aWUtY3JpdGljczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ3H3PHdAoe922GS7rZgIkTcWYu2PDx7ogFyCugBXty552TPjoqAO8m/XBoQV3ik2GxQlFPzFzbWD2JJAdm7pxsHjTYcqpxwqjHY7BalMrnbcD/0KiJjMRAxg+4rzhyiOWUPy/q0P+BEYFH5eB70HWzBLzjqQCVOsS5dYyexcKexDawc+fVLOt/7eT5lgoH1mjSDLs9QYLNEf+220lx1HeqBA3+tbEKdm4MOejESY7KW2Ugit+Aqlq8yAixsbrLnyK+dYSN97+C35TkG3nKnhjRCWYVLJ4E8hZyuTBYBaNOxrUYvH8gK11o9Vz6HFgWf3I3qiiWQtude+PySM3Gu6xMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAe56QBYPXBeyytCOvalkB+o0CCfdFdC3WNdLGSFjUkfTVvR//wb6OSK2xuGqIcIyTtZFqOCJoTd+HeO1jpmeBKO4vCGMj+IScc+rLiDemIPDASUJAqyYGd98K03sQ+1a6VELOtV0O5vr6ja8Om/O5/OVKMb0VbnrsEW+5FbnXaRyzmk4A8NlooL4nqEx/+36qSihfdTLWfgFBjyY5tHS8PaQ9G8iEwt8oy45F2x9zZc+m4N5V1vdmPmCRgGOaFuM1UnKtNmiFwGYXCRyU9chIjM64fKp9tttG+AHzXcK4huBS/Xfq51m1pAUzU70oYrBPKyvx02zQXYJk78jjh4Wnyg=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "1aabc54a-1c80-41fc-aade-c7a519655515",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["0351b04f-6a39-4c8a-ba0b-e15090be8b9b"],
          "secret": ["Tcv61g-nEfujtuUEvKz4fg"],
          "priority": ["100"]
        }
      },
      {
        "id": "1cb53903-dc34-48d0-a9c9-e10bba9d8d1b",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["6b5ac23d-55fe-408e-a3f4-f4da04cd215a"],
          "secret": [
            "XGKWgBs99bRYnkzA0Owk6tqJ1n7lSsV89bYbF5cnMAfTd10KWbV9y-2yZy1vKxVh1R0eLRR3vMGnvX6zJ8hcyK5KEAOt3bAL7A_NkrTEwyx137pweW0h8s0LBR0pUB7CXPqBBpj1JJ1piE7lUt5VERuZPq-YtRld1xT4465rmnc"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "b7db6953-dce6-481f-92d6-fc724f79b3a4",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA8R1tovSSC34sh1dI4r17PU2dIHZJUHBo0niKkWwb1egJJCPmwn8Ir+EPiDxKWRaPhMQU/uDdYuJ5XpvyNrSlyP3TmGUFo9+wP4lWd1n54yGNZ4ft+E3QGlOeqTd+mrx8/apJp2eNpJVEZgKAXAYuNHaKD8k9WWpg3BNX7oJBkRvXZ4BOWbkfKqA+K8rCqd2ao7731inXCopazHTjJ7TB1usLoYGrek428RSqVv+pLaMF7/RK8haoI9vbdMU6jdi/E1AQewsafvqGNAcqH510rZdAgMNjduYur4nc5w15dFwAikp9Chvq5NHKupHr2ZFQKaZ3LbSjMIwmcNDeK1hiVQIDAQABAoIBAA/uaBlZjBHO1S3fHk1/BBbVm0FzF16FguOPO+ambENquLnm1l85Cg+m8QIJK8dtpm95DkMWBAK94JOX/b3QG1knrlS2LhR5Gfnkvu4VZ52ykJeL43Uh3RN0PXpEVKzwMdkH6KRzQuhiRXnxBd6uuNxWDcLDwvY2wW4hKBD2EdN+0NsXtNUGLH/7kNeQ1cHTkRZ5sWnYb4qaUtJS1Wg1YB7dODZU3EgMorGwq6CcebUXMNaWzEeZ5wlPQk4n9pAjflSBXZCTI2C8YPV4L12WoPL+zAWbGmcS2wSRGmJSUCZNwVkeujvoOvpjdocWCpmgtnaViAeSm2/0bxN/RdndFSkCgYEA/SDtp7xpKGipquv1UwggkR5ujmIADVMQnIr7hvIJUV7sABqGhUp9PfQ/nfkLYsm3oF4zTlqqWgBwC2SqO05CgWoV3Uv3EGZYcvUmmKqPCheb3kkb+0HAYV/XtP4VSc1nTBDHT3IW4oEalzCjbzhUR53qDr0m/wKHpIdu4NJOKVkCgYEA89mc5cyQF4AWAd4z+lC9tRTh+/aPH+UnKI7K4uyvdGpg+JsuQDggnv1BCjjZ2D9raInPH7bRuwIa23aOvTTaexXzTB7xCzZPeXTfuIEDcpMKgJh0MdoeZFXaF/tflkLUJqfT4leYyu2kymwd46ZCguPLRQk4UTellxDHnAAVpV0CgYAApxoVyaWXxhVR7IPYb/fth9+PHG+VmTY8wRr+8RbXD+CZ63eXVmbWRw/271J5Mb34euW0+QThcIjZbqwFtSD0xnpB9NUxRKJLwZgU4rO1ufPb8eJRlozRc3bR76nMY+w1RQHOkaO/d8fCxgxV2BZXjO+ylAhKtg31fafqioBLGQKBgGsKOzUkdpvaPc7UGzzl9GBoqkpQEMOPc4D6LVUvUFVp3OdENyk5ehhQUxyJmBa0wBFDbQge2DGe2us7P60OZllhaUsgye6CCKDoDMyQ1VKV+SY5xcecV3rztKiST4NGEpplUT0p9ogdiRjSHMyxTsDl/XRwd6gvJSEK3JQ99UKBAoGBAJPid8HhoBs5YU7tS97JLEcdE/pExe/kxIZ0NqwTToYg3GWPxR3XCPIDARxm/7ACksFK0VRa8p+rO/D7/bwTvLDQ4GiSs/4gRWxag843SCKKFchPyBI1uTlL9c9pqAEblNhcSN9enCvF83qWsufv71wx8/VR+1VnTfRnfOO+x5l5"
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICqTCCAZECBgGTciDoWzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1tb3ZpZS1jcml0aWNzMB4XDTI0MTEyODA5MzQzOVoXDTM0MTEyODA5MzYxOVowGDEWMBQGA1UEAwwNbW92aWUtY3JpdGljczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPEdbaL0kgt+LIdXSOK9ez1NnSB2SVBwaNJ4ipFsG9XoCSQj5sJ/CK/hD4g8SlkWj4TEFP7g3WLieV6b8ja0pcj905hlBaPfsD+JVndZ+eMhjWeH7fhN0BpTnqk3fpq8fP2qSadnjaSVRGYCgFwGLjR2ig/JPVlqYNwTV+6CQZEb12eATlm5HyqgPivKwqndmqO+99Yp1wqKWsx04ye0wdbrC6GBq3pONvEUqlb/qS2jBe/0SvIWqCPb23TFOo3YvxNQEHsLGn76hjQHKh+ddK2XQIDDY3bmLq+J3OcNeXRcAIpKfQob6uTRyrqR69mRUCmmdy20ozCMJnDQ3itYYlUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEA3PL+TfYeS2S4eR97sQkY1syTqb3nmhkFTnwB/NwDRytQCkukFKI7FPmjd1SH7vXs/lgFGraF4Q+Zbj7Osl4aBFAR/D05Ic6avVtCK7hislmSadbN7eZ/mcaWk8PKAuO6WNco1NSEDK4tbEo7zL1NGV4/xamNsWrIhaNpPcyGTa2vGDlAkgk6/R8DsN6pvNRDEhMKGPUQLQnjj19LNh9wRu3LSn7Ogj8LLxFbZUFzHWpbGY4MNXLiJtGMH0XCXyHjz32xEGtcAL9R1RJhHgQVfGT7dBVy3lU05D+QU+v4AgOcFk3Mn8P3wzx4XZuyzOpHqlP3eP5JmtrzY0v++hBy+Q=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "c903735d-5f81-4a94-a6cd-7d874310decd",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fe9fad59-7f94-4c67-ba66-bc9308ffd1b1",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51fb2aa2-0159-4628-90ef-b9610afb30d9",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ecf96e07-4d85-4b74-8e90-6e74d69deaa9",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "55d7f43e-bac9-4a7c-8865-365ad0582a5c",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "887f287e-abda-4eec-b399-d57c89454fae",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b75dd865-1d26-4dc3-9720-f0df2a6fb633",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6896161d-b478-4985-b88f-7439d87a53af",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ac5dd8fb-02f2-4c35-a694-65ec9ca9167a",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0c6eca6-2710-4041-8152-a35f34c83a89",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4e10c495-9a75-43dd-ac84-ba18aeb1e4f1",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a96b2edf-e959-43e3-87c1-8e44420697a4",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ac94275-84a2-40c6-ba6d-342f45a5a7c7",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4061622f-f332-41bc-be40-0e0f412fe526",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa67d97b-9de3-4c02-aecb-37b51060844b",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "460907eb-39ab-4325-88b5-38148b7abe53",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "be168c4d-ddb3-4fcc-b97c-79bc313cd3c4",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aedcbc1d-64f1-49fe-bfb8-d61c50d408e2",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9f24cec9-4254-4f6e-bbef-6871e3973eb8",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2c417920-9e71-47fd-8725-a33066a3dac9",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "53a7ea05-0790-47cb-bc26-a19b1ea70741",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "cae630e1-2ca7-4713-87a6-b950b92a1ae3",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "53510f1e-e9df-4ec7-be3e-f6d4f288b658",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.0.8",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
