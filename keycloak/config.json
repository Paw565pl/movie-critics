[
  {
    "id": "5f910adf-1c98-440c-aed6-6f72e5914b4a",
    "realm": "movie_critics",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 600,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "a81393af-f8f1-44ca-92e2-18f3022a68f3",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "5f910adf-1c98-440c-aed6-6f72e5914b4a",
          "attributes": {}
        },
        {
          "id": "dd9fa9ea-f13c-4a41-9172-a475c39fcf73",
          "name": "admin",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "5f910adf-1c98-440c-aed6-6f72e5914b4a",
          "attributes": {}
        },
        {
          "id": "633d0680-2151-4d11-ad32-32bc199896e0",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "5f910adf-1c98-440c-aed6-6f72e5914b4a",
          "attributes": {}
        },
        {
          "id": "dc22ebb7-f25c-4403-98f7-7195dc70fca5",
          "name": "default-roles-movie_critics",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "5f910adf-1c98-440c-aed6-6f72e5914b4a",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "fedada94-7c9d-415b-a64f-72c99b231e7f",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "f310d508-14c3-4173-a439-2613b7135d05",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "4d646ba2-776d-4a7d-91fe-6dc722a80cff",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-identity-providers",
                  "view-events",
                  "query-realms",
                  "view-authorization",
                  "query-groups",
                  "query-users",
                  "view-users",
                  "manage-clients",
                  "manage-events",
                  "view-clients",
                  "manage-users",
                  "manage-realm",
                  "manage-identity-providers",
                  "manage-authorization",
                  "create-client",
                  "query-clients",
                  "impersonation",
                  "view-realm"
                ]
              }
            },
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "80f03af3-fd6b-474d-bf41-726f77a22af8",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "60eef96f-8aec-43da-83e5-c6d11930d261",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "ae8b06b5-f0e6-4a7a-a4e5-5cf7b2bca76d",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "23b93048-214d-4fdb-bbc6-23b96520a396",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "f1705fc7-d1bd-40f5-8f3d-340f7377965e",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "417a3794-c92f-4adf-b567-bfd23bbfa040",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "21b25695-02db-46af-96fe-5d9f49f02e34",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "5ba6cf19-05da-4b75-ac1b-d6bec8584515",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "c2534ab2-daad-4197-8051-170fbe575f8c",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "f3661d60-25e8-4d58-8a49-937d6458942f",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "a7ef7629-bb32-4b88-8479-3150ad2802ae",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "9f45d0a0-dab6-436b-89ca-35ba16fd5dca",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "623cd6a1-1e6a-4245-b928-20163172b09b",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "92bcd4f0-f5fb-4d1e-b5c6-68aa0db5f365",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "7a4d9770-e850-40c7-8d63-67ac2e353e5a",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          },
          {
            "id": "f670dab7-ff91-42bb-bb69-1865ea14f43a",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "71fe9658-c619-4b17-8596-6c0c384c7205",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "a35ed3d6-c349-4d5a-8ad0-02ec50b75978",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "b32bd419-aca6-4aa6-bcf1-90ed122e1103",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "386987b8-0feb-468a-b647-1a80f81cfcc3",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "076bff93-f9c3-4120-89af-5af459de3871",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "edd20023-8453-4481-bf92-beda5d0e400a",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "eae19de3-90ca-45e2-b8b3-078383a9427c",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "aaee2bb5-14de-4fe7-98b3-4d45014d6475",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "cf53202f-e6ea-4454-afaf-f01a9753306c",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "712b1012-3384-4ee3-a807-0428ffc4931c",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          },
          {
            "id": "2afd7ae1-9fde-4a16-8a66-73ddeebaae48",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
            "attributes": {}
          }
        ],
        "spring-boot-api": []
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "dc22ebb7-f25c-4403-98f7-7195dc70fca5",
      "name": "default-roles-movie_critics",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "5f910adf-1c98-440c-aed6-6f72e5914b4a"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "a468ee83-1df3-448d-8bdd-7dab24b03bcf",
        "username": "admin",
        "email": "admin@admin.com",
        "emailVerified": false,
        "createdTimestamp": 1725734392251,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "id": "d4f0c209-e167-4538-80ac-64a3c25c61de",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1725734402152,
            "secretData": "{\"value\":\"oi7vPk43r82YPVnksTCoZzvAZ0E4Y1uQbm0Zw6RbDoU=\",\"salt\":\"8L5u9DQxJADQIEz4btSBcQ==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "admin",
          "default-roles-movie_critics"
        ],
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "b76d974a-5974-4b12-939e-2ca3573213e8",
        "username": "test",
        "email": "test@test.com",
        "emailVerified": false,
        "createdTimestamp": 1725734367087,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "id": "ad231411-3e70-490f-9f5b-2d5334e8a734",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1725734376932,
            "secretData": "{\"value\":\"CufEcmCMFccl1txxu2vstzb+QAFSQv4Sw8vkMGtBDkA=\",\"salt\":\"H79TUZIgcxCQDNAuSLgGAA==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-movie_critics"
        ],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "24d7a699-6837-4911-b39e-ca6dd53e3b91",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/movie_critics/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/movie_critics/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "322a1b93-23e8-403f-9f63-136f9bbecf0b",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/movie_critics/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/movie_critics/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "c7de8827-cd69-43e0-b847-7cc1b1d98416",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "5f680a8e-359d-4dff-b3f7-a7bf00aa12b6",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b32bd419-aca6-4aa6-bcf1-90ed122e1103",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "71fe9658-c619-4b17-8596-6c0c384c7205",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b27cf361-96f0-4a94-b6b9-42d48c82be97",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/movie_critics/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/movie_critics/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "c886a2ef-9efa-46ed-ab7e-b2a527c3aa39",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "e6db7080-6668-400a-a390-6dbf09599f69",
        "clientId": "spring-boot-api",
        "name": "",
        "description": "",
        "rootUrl": "http://localhost:8080",
        "adminUrl": "http://localhost:8080",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "http://localhost:8080/*"
        ],
        "webOrigins": [
          "http://localhost:8080"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "796c32a9-a13a-460a-81af-9b15916b4931",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "cd5a3dbe-118a-47db-a3ec-bf4bd70b4d73",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "d9faec86-b889-4ad1-b058-90ac46856da8",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "03e775e4-b844-4409-b938-39220a6ac522",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          },
          {
            "id": "57c89be6-e10a-4e05-955e-c7319729b587",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "d87b6458-c8ac-4292-b745-428824b5596c",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "95bf2c51-cb50-41c9-a216-ac5486ef3c96",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "6b78a1d4-946f-4587-85e9-ecca464bbb05",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "34c19463-83ea-4289-bb1c-97f53a2d3736",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "3cfb0ff5-5038-4874-9b47-b1957998bb6b",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "4dcfc463-c402-4259-a8dc-333f680c77f9",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "b3ba17bc-2b2a-490b-a502-ec0875aaf38b",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ee99eb05-fdd8-47cb-8585-868471025dba",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "7bd7ce32-c298-48bd-b4b1-64150d090f2c",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "7029573c-a693-4988-8f20-bfbd187a7851",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "e4b170ec-9d63-44e0-8f9c-add168c18c0c",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "172beca0-442e-43f1-b111-083f2a9f5359",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "44fe4262-41e7-4467-b344-e0fe51fe9ad8",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1249a70e-1c3a-4efb-9ffa-d5e05a8c6a7e",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "58a87796-f1a3-4ac5-b9f0-7464637d3528",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "82a68509-daef-4a85-9426-e9b7d96aac22",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "02319308-0d1e-4c8e-bc61-a112daace812",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f9424b68-a414-4aad-900f-97fa645501ab",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a4c8f297-7463-420a-a6aa-f3a64b3deb60",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e71fcb5a-934b-4686-9971-26d86902c945",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "77b56f71-5b0f-4725-9621-c7c303a7fe01",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0080c38b-2153-4f2d-865d-68eaa87b3765",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "946c4c33-e6d1-42ee-87f0-994329dae090",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b6351f2a-f8da-4e93-8f7e-fbc04902dbc8",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "a7f71d89-1341-401b-bf72-4a508ea39f2b",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "8ee287c9-4c37-456b-9ee2-d61914bf0c3a",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "e193f62f-3897-4e6b-8f6a-ab0a79e5f15f",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "28723b6c-3e4e-4b11-93a4-d0d501ad0e3d",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "973ee0a4-7f27-49b9-9485-28760746b0fd",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "d6fda395-cc7f-4173-a4f8-17ecb2898a93",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "0120a597-632d-4a27-82d8-d6e8006d9349",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "91dad351-4578-4f40-be57-7647e5dd6422",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "21fbb44f-08e0-441a-8316-5e4d5f748698",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "81b133f1-8d95-4c04-924d-594aad73d1c3",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "b7b2ad2b-8fcd-4437-8917-fcdab878a05e",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "91692d39-deff-4f86-917d-9a60d201582d",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "78d671ac-1a95-4b4f-b037-e99772504fff",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "678a285d-a8f1-4f7e-a7f3-6778bfe2b308",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "2714cdf0-bdf1-4871-9b81-eeaf60b5d540",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "0c100954-8b92-46df-87b3-f225df825ff9",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "29913e84-c6dd-4611-a17c-6a998f970af6",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "e1bfe1af-1278-4292-a8f2-113cad3abe94",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper"
            ]
          }
        },
        {
          "id": "14e2f18d-a6c9-4603-b685-2a31fc308f79",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "4f534d9d-2dbb-4053-a010-63942ff8bb07",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {
            "kc.user.profile.config": [
              "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "59c3fef0-72f3-4b97-949b-e3ceec5bddd8",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAkMfjyI9W6gDYTd9bdJgbj1rZVbV1mkow8FOIwoKDArQKkEQm/GHTiPX9gBmU01ediR7wTZNkJVzM/itZWtPmyMUVnW8uIrUYnjeapl4IlEBf5Vadeg4RhL8SJ6n+LUE6Rqu14Vmt8NfwKfA3z+LffuXn/yFbcXF4fbUYQ9TXUufXqyMiMhB/b11qxr0Z54OSF46ES7272re5uqtdV5wdup5Q76MhtMQPn+zr5n1p7eIaH0M+ifuQePS1WUBOa6jKyrxId3JwYNTDUvA3ccB6SnEc6P2rT9+pWbAJ1dxIcW7kU7aYAOBK7SIMZtrwX8WWXZOZ9mJlKJVDLQyme6FLaQIDAQABAoIBACJ9zHFSXLVgwCdFJ+eN+TrcvNwjX8IDHMeUTwdvykBRnhaidds4fwmo+NyUu5Th0aECIuOIUppoEloW/7GYu+lmsnCQNSCFnjjLLGeoDUksUOw1B001nszOLEgQwoILgROnAqyODddLymZjWRiIhxAXO37Xdo5/JuJjy0UVprqULzwKCZSCp+rge9pRAtFVRfH008vbETcGec3YebLZW3DkLGM2eINv2SNu3nzBvcPfwfoK77Sz56wxqL1+lHoYCLAcHUaOBET6y2h1wBeq4Y21835qpBh8LEySvthrwPG3x3dzieTyFw4YxQoXsQgP91fUufhbokhEku5uCUPNrQUCgYEAywUN8rPh4y6y6OCgqX81OGY0jyDXbPMtxLuvq5KWFA0j9I16ms152bcZmiDkiFfLqvA2Zdc/i/xc2ha8E5dn5Dsvgl5Bb7DfcYU9fuyuDLVxCt53mb6/OS3Qu4i2fYNXdVCjkvy2clVsmnKl0xJnOXOW69SzUXwPx/t1NQhklY8CgYEAtpAfje2kabFznbX03zXA/aN3m1X5yUVMt/I9CtSh2ZDjfcK0KjLbGQv+/B9IZe3yymKJcsQ4Ny7u+QAv4t3i5wzfTtXDirr1l4i3Dou+7tfTEyqcEH/CIOXkEgZWWnl3lIo/anhulKAsGuPp5rjU+CCiv4boE8pQ/hI96AhuQ4cCgYBNE3ktKG/c4VDZKta0IvBgniTcJfrDiTtaEmtqNve1WxvIb6IZfWMCbgpRQqWgwbw4BISSe3rLuZ7CyZjT00qFEpdB5mjvb3YVUiF7u32Eo6nsF3POseVFXwh8+jVWR3P/vQKs/jaCB754kIg2LylzXVfx5snBaNlQ8j2YSbxuLwKBgHQMGzLB2+Afn6mhrz1v0vSnw3Dnbvdk6MaI4gqPbS56blFTweiNGT7LpFMpo4C/h7TkfBCK8F0LpXZ8ivQALarHQO/A7CK0g0bG7e3+IOl8Ib0uObQ3MfRtjdNzWdL7IWs3keYhFdG+Gysgs18pIJ91R17N55ok4eUPPXDQYx7jAoGBAIfmqPQ/Mre3655W5xckfUUNVfn4z9Hm+S3wfz1CCLxYO3CILhPEjCuqBmH7n/z3fxJgkG3N8e0u7QH4+3ul5T3f2CuR+6hb9U2nSvkRS5EY7hScGI2kdGlJvC9/8ieFCWsjSYERUHYKoxL5UHchx6/OA7RtBQc71G/KYdLDDm3h"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICqTCCAZECBgGRzcc+MjANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1tb3ZpZV9jcml0aWNzMB4XDTI0MDkwNzE4MzYxMloXDTM0MDkwNzE4Mzc1MlowGDEWMBQGA1UEAwwNbW92aWVfY3JpdGljczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJDH48iPVuoA2E3fW3SYG49a2VW1dZpKMPBTiMKCgwK0CpBEJvxh04j1/YAZlNNXnYke8E2TZCVczP4rWVrT5sjFFZ1vLiK1GJ43mqZeCJRAX+VWnXoOEYS/Eiep/i1BOkarteFZrfDX8CnwN8/i337l5/8hW3FxeH21GEPU11Ln16sjIjIQf29dasa9GeeDkheOhEu9u9q3ubqrXVecHbqeUO+jIbTED5/s6+Z9ae3iGh9DPon7kHj0tVlATmuoysq8SHdycGDUw1LwN3HAekpxHOj9q0/fqVmwCdXcSHFu5FO2mADgSu0iDGba8F/Fll2TmfZiZSiVQy0MpnuhS2kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAJMFPLpPPN/fHAgP0mXPxMdvyDylmCz6B74rqNsnJ2wsF9OTY8KVn2vNrb6z9CN+18+/ZO6HUulTh7t0bxoQXPFqGsLFRZWqV38qsD4Xf8tpb/5pdl3XYLz6uHOEjmunVEbJQqJQq+uzYAH0UHXN6h7b5fSBKH2yPy+JDA+8RcdwVQkQZvXizcKjNMT3KtJ2POuii8QG8UDhZYoXgbopVpYyEfc7o6AVwbKRJ3urtMz9h/PTItSK0SHCZw3reX9VS/zVBBizgTCpmhUW6/9eOBT2wVIH40WmCFbaldIaEFllA9FNkimRTE6p1Bt693HOCRpT4zJQf2EGr1XLTt4aQbw=="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "17540662-c2ae-472d-bdcd-ae0c6879997a",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "1797aa54-bd9f-472e-bf75-e9028e5ee23e"
            ],
            "secret": [
              "8Pfa-n9XW-xWmFHAeSHymKTQg6GNYYpRRah4yfPo2CUzJtkGeGy190SgHD_TAaBFDWQWVQ7M906tD5S6QhT6ngQitz4KbvPCOSGsnUkCl95ybbh9AJnlz9_tiVTHWrltmZObiU3GN3h_v-dUfiOaywb5h7P-S3tVOj7gzXZdczE"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "0d5c942c-28a5-4447-9da6-5ea518dabf8b",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "56604333-ea78-4bb2-9639-742cf7163441"
            ],
            "secret": [
              "MBPk17SP00WQQNUmznN61Q"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "a730c01c-c446-43f7-846f-478505f9738f",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEoQIBAAKCAQEA5LDe6iNpei5lgBefmjwewe558gn63ZU6cbuXx4kadtqQMwf/aKu/YPaA4RliAohJTc7LZPVeW3//iKuC0q++mgomDi2B6nPYrKx++MY1m95pg+hSMcFl+S4EXZ8TK7AXFaz6qACi9FVg0kFhE5xpcWXzTyaSX+26Vsa+BHEfCBKj9NC2fwyXMjXAIRwmfTuiDD5SU0Xhy4+DQfGFpK/rpI/zNFTGrb+jhygpRN8R5I78Fc/fSUNEMOCDWlqwPYGNcboic9Nxj2EUWx0ic5F9SaOWEzo4tdcplXZx0WJiK6GFr6IfhXwKKLfQMRTXvtHpDyvTJY9OKo8Vrn6GDgf1jQIDAQABAoH/bPvdP7egjJmPxXt8lAQSpFkBxFb9NpvnPkwoCO9NrVZ7YdZt4XP3wD25LYzrKEnKpUnnpDVKwlA9duRFdCJMsxwjBp6pSxHqMGAEIopTAfT8U+BjS1LfReCoM/WbLTa9yZal3WpwPgByI8EEglQH7AKp8Q5ws0aXhsMvyu4d27ofcepx5WO0l/PlYCRXZIOVjv8L4M4jcFiIan6mUymnV2mlSzHPDIfmev/vJQ+MwvlP+nu/cVsrVIy0EzG/OiR7/jmqUU08aqhLeg+//59J6PSMXyE4jnBBasFiPDbJ+3rT2aiSVmx1BX/20eE/Eq5S4SKN+Ccy5EeFUJ+gnl/BAoGBAP+PDlls0WRwwOSxKrTNO1S67L9OpJdDapK41IU5sg0PwKZ8j2EZcBnWdchgTwKjn1hfE69ddg8A0glPLkbKSDE0XWxUFalgsQjBLKvQFvKB1P8y/LwhH0YO8qk1Wsd/QGr/ArxLf0GJRwFVld6sIxxu5AFfhxguqpbx6mOQCUw5AoGBAOUV8MIv9LCxYwsCv61rDwoEj0FyDl8A1ULfFpGVWj4MRu7oXlysx0A5TMmB81LGIdhF2iN8Xs8GreGmqq/o9tF2oJNpQNEqtvIjrvA3rmX92jfDieH19SLHin8vwk64Z8xbqxexmpdtK5ehEbgfbOrs9RKalHK+CWZoV2c62Bv1AoGAAILFsZIRHRVInWxpPHFIlBPHk15R3+eHmAF8k0OZQoNsjCillLkbS0HtfFgM8GFpWSDfhjM2oDMNOG2LFyMiX87N/QByBqOl1vGj6DgDQ7rUtSnh7XJXgKlY/NOZedqcQ1p9I+k2uOfQV4VXRlmrvEvQctxBBeBaAPE82bQZAKkCgYAkuGycI+W8AOMYW7tvx85kU7DG08p77f1BN9M9SMxrT7p7ByJBBqz1nXmyfzMKnJnGOgQqVgA4fSCYIAgSJGyTzMkWd/Oc05T5oUCkXriEvrkg4SYT40IE7ilEE9q4lZSFzFfTd3OJPEWVi4r0kYz65zqtXbvX3KBTGvyPnn4PlQKBgQCXiULeG2rYE7dfUFsZOqSmoFqIcQDzEVHFd3NUoqQ6n+ePw9xiRKo1lFtFzWi7xTG5mHLSgilYc7LFz6Yd9JhF/eAXspdDebfQQlyjXzE8bPKEq/vQNpdZyPOds5M/589Yaq2rCqRzya6gqxr3u95B8fbfSf4B9J+I+i816IOtKw=="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICqTCCAZECBgGRzcc+GDANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1tb3ZpZV9jcml0aWNzMB4XDTI0MDkwNzE4MzYxMloXDTM0MDkwNzE4Mzc1MlowGDEWMBQGA1UEAwwNbW92aWVfY3JpdGljczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOSw3uojaXouZYAXn5o8HsHuefIJ+t2VOnG7l8eJGnbakDMH/2irv2D2gOEZYgKISU3Oy2T1Xlt//4irgtKvvpoKJg4tgepz2KysfvjGNZveaYPoUjHBZfkuBF2fEyuwFxWs+qgAovRVYNJBYROcaXFl808mkl/tulbGvgRxHwgSo/TQtn8MlzI1wCEcJn07ogw+UlNF4cuPg0HxhaSv66SP8zRUxq2/o4coKUTfEeSO/BXP30lDRDDgg1pasD2BjXG6InPTcY9hFFsdInORfUmjlhM6OLXXKZV2cdFiYiuhha+iH4V8Cii30DEU177R6Q8r0yWPTiqPFa5+hg4H9Y0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAEsKOkdO4OgiIlrqtpxq4UKvpMf6tyUtCzcEl/TQa8OVu/e/13e8G5GkaMiDBoM3i2bdx/Jh3npg8QThYmkASz6DRR/236CI+asyIw/pl2zJLcCK9GJrQ+raM9Suj0tJlF0zWqexwhU5DTamZM3XsjTz9Qb3JQhY4OFOcDO+XH2ibk2wmt6sy7Z9KUcb5LqxGeAu37C5QinZwvaHkH/obpwz0UNCyzgdieVf2dEeoS7IBShaEMVEZW46jXL85vP6vIua6YCiKiSi+j910k5b1KUDzSflKmjR+GV6+WjzyVBOoT8trVCv5Eb7dpv8ANQ0cb1kMBUsVlc3fyx8LlaeCrQ=="
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "a71edd9c-02eb-4d3f-9a55-04a86f6861cd",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "83cd56f2-7ae4-4e59-8dc6-18688020f9cf",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ea6f0835-bcd0-47be-a3f3-d00aef8d5d60",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "083911c2-bfce-4f64-acb4-dc835d1aed94",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "73e5ec1e-e699-47cb-80d3-ac8e2ae3742f",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bef2ab0b-2b95-45a8-9532-068725dcbdcf",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "451459a7-aa53-4e31-a0b2-4f542e6dd266",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d2dbfc9c-ad22-40e1-ab7c-7ce2270ff39f",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7aa25a35-4338-49a0-895f-4f4eb3bf4985",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bdc23062-0f8b-4bde-bfa0-ac7db7c05496",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1179a52c-f81c-4837-a8a8-0af2e87efcd4",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "06934f1b-d5fc-4720-aa8a-1bdba6762e8c",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2902cbca-0ebe-47db-94a5-df692352cc63",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f2ec2abd-3f54-40ca-8916-f0f92d66306e",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "88f5d98f-e311-481d-8780-b884ae00c15f",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "de3328aa-4c4f-4e87-97c5-409f3a87f223",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f579b0b6-dbc8-4e0a-abb0-1437d6a056db",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ac1ef32c-c075-4636-ae3e-bf79bec71524",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "8b474daa-1468-43d9-a40f-facca5ec4bc1",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "f07f4ea4-f688-48c6-a2d1-dbaaa53cd1c8",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DevicePollingInterval": "5",
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "actionTokenGeneratedByUserLifespan.verify-email": "",
      "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
      "clientOfflineSessionIdleTimeout": "0",
      "actionTokenGeneratedByUserLifespan.execute-actions": "",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false",
      "cibaExpiresIn": "120",
      "oauth2DeviceCodeLifespan": "600",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "organizationsEnabled": "false",
      "shortVerificationUri": "",
      "actionTokenGeneratedByUserLifespan.reset-credentials": ""
    },
    "keycloakVersion": "26.0.1",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]
